name: Run tests
on:
  workflow_dispatch:
    inputs:
      checkout:
        description: 'Commit / Branch / Tag / SHA to checkout'
        required: false
        default: ''
  workflow_call:
    inputs:
      checkout:
        description: 'Commit / Branch / Tag / SHA to checkout'
        required: false
        default: ''
  push:
    paths:
      - tests/**
      - niizarr/**
      - setup.py
      - pyproject.toml
  pull_request:

jobs:
  run-unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.12]
        include:
          - python-version: 3.8
            numpy-version: "==1.*"
            zarr-version: "==2.*"
            nibabel-version: "==3.*"
            ski-version: "~=0.19.2"
            numcodecs-version: "==0.9.*"
            dask-version: "==2020.*"
          - python-version: 3.12
            numpy-version: ">=2.0.0"
            zarr-version: ">=3.0.0"
            nibabel-version: ">=5.0.0"
            ski-version: ">=0.25.0"
            numcodecs-version: ">=0.15.0"
            dask-version: ">=2025.0.0"

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkout }}

      - name: Install dependencies
        run: |
          python -m pip install -U "numpy${{ matrix.numpy-version }}" "zarr${{ matrix.zarr-version }}" "nibabel${{ matrix.nibabel-version }}" "scikit-image${{ matrix.ski-version }}" "numcodecs${{ matrix.numcodecs-version }}" "dask${{ matrix.dask-version }}"

      - name: Install nifti-zarr
        run: python -m pip install ".[test]"

      - name: Run tests
        run: python -m pytest tests
